package com.gome.gmp.ws.organization.pi;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.6.1
 * 2016-04-12T14:07:04.213+08:00
 * Generated source version: 2.6.1
 * 
 */
@WebServiceClient(name = "XI_65d0c7b27040398384d5c663b85cdfb2_Service", 
                  wsdlLocation = "file:/d:/INTEGRATION_SERVER_PID_SI_IHR055_REQ.wsdl",
                  targetNamespace = "URN:PI") 
public class XI65D0C7B27040398384D5C663B85Cdfb2Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("URN:PI", "XI_65d0c7b27040398384d5c663b85cdfb2_Service");
    public final static QName HTTPSPort = new QName("URN:PI", "HTTPS_Port");
    public final static QName HTTPPort = new QName("URN:PI", "HTTP_Port");
    static {
        URL url = null;
        try {
            url = new URL("file:/d:/INTEGRATION_SERVER_PID_SI_IHR055_REQ.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(XI65D0C7B27040398384D5C663B85Cdfb2Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/d:/INTEGRATION_SERVER_PID_SI_IHR055_REQ.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public XI65D0C7B27040398384D5C663B85Cdfb2Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public XI65D0C7B27040398384D5C663B85Cdfb2Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public XI65D0C7B27040398384D5C663B85Cdfb2Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public XI65D0C7B27040398384D5C663B85Cdfb2Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public XI65D0C7B27040398384D5C663B85Cdfb2Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public XI65D0C7B27040398384D5C663B85Cdfb2Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns SIIHR055REQ
     */
    @WebEndpoint(name = "HTTPS_Port")
    public SIIHR055REQ getHTTPSPort() {
        return super.getPort(HTTPSPort, SIIHR055REQ.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SIIHR055REQ
     */
    @WebEndpoint(name = "HTTPS_Port")
    public SIIHR055REQ getHTTPSPort(WebServiceFeature... features) {
        return super.getPort(HTTPSPort, SIIHR055REQ.class, features);
    }
    /**
     *
     * @return
     *     returns SIIHR055REQ
     */
    @WebEndpoint(name = "HTTP_Port")
    public SIIHR055REQ getHTTPPort() {
        return super.getPort(HTTPPort, SIIHR055REQ.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SIIHR055REQ
     */
    @WebEndpoint(name = "HTTP_Port")
    public SIIHR055REQ getHTTPPort(WebServiceFeature... features) {
        return super.getPort(HTTPPort, SIIHR055REQ.class, features);
    }

}
